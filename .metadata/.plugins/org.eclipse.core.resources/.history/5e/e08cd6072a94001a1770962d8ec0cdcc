package gestiondesEtudes;
import java.util.*;

public class Filiere implements Comparable<Filiere>{

protected String  nomFilière;
protected Set <Promo> promoFiliere =new HashSet<>();
protected Set <Class> classFiliere= new TreeSet<>();
protected Set <Student> studFiliere= new TreeSet<>();
protected Ecole ecole;
protected Respo r= new Respo ();
	
	public Filiere() {
		
	}
	
	public Filiere(String a,Ecole ecole) {
		nomFilière= a;
		this.ecole=ecole;
		ecole.filiereEcole.add(this);
		System.out.println("vous avez créer la filière "+this.nomFilière);
	}
//-----------------------------------------------------------------------------
	

	public String toString() {
		return  nomFilière ;
	}
//-------------------------------------------------------------------------------
	public void removePromoFiliere (Promo p) {
		 promoFiliere.remove(p);
	 }
	public void respoFiliere (Respo a) {
		r=a;
		System.out.println("vous avez déterminer"+ r +"comme responsable de filière"+this.toString());
	}
	public void addpromoFiliere(Promo p) {
	
		promoFiliere.add(p);
	}
	public void afficheClassFiliere() {
		System.out.println("les  étudiants de la filière "  + this.toString());	
		int i=1;
		 Iterator iterator = classFiliere.iterator();
		 while (iterator.hasNext()){
	         System.out.println(i+"-"+iterator.next());
	         i++;
		}
 }
	public void afficheStudFiliere() {
		 System.out.println("les  étudiants de la filière "  + this.toString());	
		 Iterator iterator = studFiliere.iterator();
		 while (iterator.hasNext()){
	         System.out.println(iterator.next());
		 }
		}
	public void affichePromoFiliere() {
		System.out.println("le Promotions de la filiere "+ this.toString() );
		int i=1;
		Iterator iterator = promoFiliere.iterator();
		while(iterator.hasNext()) {
			System.out.println(i+"-"+iterator.next());
			i++;
		}
		
	}
	public Class choisirClassFilere(int classchoisie) {
		if (0<classchoisie&& classchoisie<=this.classFiliere.size()) {
			throw new InputMismatchException("Ce choix est invalide.")	;
		}
		Class cl = new Class ();
		 int i=1;
			for (Class c:this.classFiliere ) {
				if (i==classchoisie) {
					cl=c;
					break;
				}
				else i++;
			}
		return cl;
	}
	
	public int compareTo(Filiere f) {
		
		 return this.nomFilière.compareTo(f.nomFilière) ;
	}
	public boolean equals(Filiere f) {
		return this.nomFilière.equals(f.nomFilière);
	}

	
	
	
	
	

}
